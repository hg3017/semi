<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.semie.cook.mapper.GuideMapper">
    <sql id="page1">
        WITH QDATA AS (
    </sql>
    <sql id="page2">
        )
        SELECT xx.*
        FROM (
                 SELECT /*+ALL_ROWS*/ ROW_NUMBER() OVER(ORDER BY yy.GUIDE_ID ASC) rn
                    , yy.*
                 FROM QDATA yy
             ) xx
        WHERE rn BETWEEN #{start} AND #{end}
    </sql>


    <select id="selectAll" parameterType="com.semie.cook.common.Pagination" resultType="GuideDTO">
        <include refid="page1" />
        SELECT DISTINCT
        g.guide_id,
        g.board_id,
        g.guide_name,
        g.guide_desc,
        g.create_date,
        (SELECT file_path
        FROM img_list il
        WHERE il.post_id = g.guide_id
        AND il.board_id = g.board_id
        AND il.img_priority = 1) AS poster,
        LISTAGG(
        CASE
        WHEN il.img_priority != 1
        THEN il.file_path
        END, ',') WITHIN GROUP (ORDER BY il.img_priority)
        OVER (PARTITION BY g.guide_id) AS files
        FROM guide g
        LEFT OUTER JOIN img_list il
        ON g.guide_id = il.post_id
        AND il.board_id = g.board_id
        <include refid="page2" />
    </select>

    <select id="totalGuide" resultType="int">
        select count(*) from guide
    </select>

    <select id="selectById" resultType="guideDTO">
        SELECT
            g.*
             , il.file_path
        from guide g
                 inner join img_list il
                            on g.guide_id = il.post_id
        WHERE
            1=1
          AND il.BOARD_ID = 10
          and il.img_priority = 1
          and g.guide_id = #{guide_id}
    </select>

<!--    <select id="selectGuide" resultType="HashMap">-->
<!--        SELECT DISTINCT-->
<!--            g.*,-->
<!--            LISTAGG(-->
<!--                    CASE-->
<!--                        WHEN il.img_priority != 1-->
<!--                THEN il.file_path-->
<!--                        END, ',') WITHIN GROUP (ORDER BY il.img_priority)-->
<!--                        OVER (PARTITION BY g.guide_id) AS files,-->
<!--            s.SOLUTION_id,-->
<!--            s.solution_name,-->
<!--		    s.SOLUTION_DESC,-->
<!--		    s.solution_detail,-->
<!--		    DBMS_LOB.SUBSTR(s.desc_detail, 4000) AS desc_detail,-->
<!--		    l.lab_id,-->
<!--		    l.LAB_NAME,-->
<!--		    l.LAB_NAME_DESC,-->
<!--		    l.desc_detail,-->
<!--		    hc.conn_id,-->
<!--		    hc.board_id,-->
<!--		    hc.hash_id,-->
<!--		    h.hash_name-->
<!--        FROM GUIDE g-->
<!--            LEFT OUTER JOIN HASHTAGS_CONN hc-->
<!--        ON g.GUIDE_ID = hc.CONN_ID-->
<!--            AND g.BOARD_ID = hc.BOARD_ID-->
<!--            LEFT OUTER JOIN HASHTAGS H-->
<!--            ON H.HASH_ID = hc.HASH_ID-->
<!--            LEFT OUTER JOIN IMG_LIST IL-->
<!--            ON g.GUIDE_ID = il.POST_ID-->
<!--            AND g.BOARD_ID = IL.BOARD_ID-->
<!--            LEFT OUTER JOIN SOLUTION s-->
<!--            ON g.GUIDE_ID = s.solution_ID-->
<!--            AND s.solution_ID = il.post_ID-->
<!--            LEFT OUTER JOIN LAB l-->
<!--            ON g.GUIDE_ID = l.lab_ID-->
<!--            AND l.lab_ID = il.post_ID-->
<!--        WHERE g.GUIDE_ID = #{guide_id}-->
<!--    </select>-->

    <select id="selectGuide" resultType="hashMap">
        WITH HASHTABLES AS (
            SELECT hc.CONN_ID
            , hc.BOARD_ID
            , h.HASH_ID
            , h.HASH_NAME
            FROM HASHTAGS_CONN hc
            INNER JOIN HASHTAGS h
            ON hc.HASH_ID = h.HASH_ID
        )
        SELECT DISTINCT
            l.LAB_ID			AS ITEM_ID
            , l.BOARD_ID		AS BOARD_ID
            , l.LAB_NAME		AS ITEM_NAME
            , l.LAB_NAME_DESC	AS ITEM_NAME_DESC
            , l.DESC_DETAIL	AS ITEM_DESC_DETAIL
            , ''				AS ITEM_DETAIL
            , LISTAGG(DISTINCT h.HASH_NAME, ',') WITHIN GROUP (ORDER BY l.LAB_ID) OVER (PARTITION BY l.LAB_ID) AS hashnames
            , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY = 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY l.LAB_ID) AS imgposter
            , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY != 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY l.LAB_ID) AS imglist
        FROM LAB l
        LEFT OUTER JOIN HASHTABLES h
            ON l.LAB_ID = h.CONN_ID
            AND l.BOARD_ID = h.BOARD_ID
        LEFT OUTER JOIN IMG_LIST i
            ON l.LAB_ID = i.POST_ID
            AND l.BOARD_ID = i.BOARD_ID
        WHERE h.HASH_NAME IN (
                                SELECT h.HASH_NAME
                                FROM GUIDE g
                                LEFT OUTER JOIN HASHTABLES h
                                ON g.GUIDE_ID = h.CONN_ID
                                AND g.BOARD_ID = h.BOARD_ID
                                WHERE GUIDE_ID = 1
                            )
        UNION ALL
        SELECT DISTINCT
              s.SOLUTION_ID		    AS ITEM_ID
            , s.BOARD_ID			AS BOARD_ID
            , s.SOLUTION_NAME		AS ITEM_NAME
            , s.SOLUTION_DESC		AS ITEM_NAME_DESC
            , DBMS_LOB.SUBSTR(s.DESC_DETAIL, 4000) AS ITEM_DESC_DETAIL
            , s.SOLUTION_DETAIL	AS ITEM_DETAIL
            , LISTAGG(DISTINCT h.HASH_NAME, ',') WITHIN GROUP (ORDER BY s.SOLUTION_ID) OVER (PARTITION BY s.SOLUTION_ID) AS hashnames
            , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY = 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY s.SOLUTION_ID) AS imgposter
            , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY != 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY s.SOLUTION_ID) AS imglist
        FROM SOLUTION s
        LEFT OUTER JOIN HASHTABLES h
            ON s.SOLUTION_ID = h.CONN_ID
            AND s.BOARD_ID = h.BOARD_ID
        LEFT OUTER JOIN IMG_LIST i
            ON s.SOLUTION_ID = i.POST_ID
            AND s.BOARD_ID = i.BOARD_ID
        WHERE h.HASH_NAME IN (
                                SELECT h.HASH_NAME
                                FROM GUIDE g
                                LEFT OUTER JOIN HASHTABLES h
                                ON g.GUIDE_ID = h.CONN_ID
                                AND g.BOARD_ID = h.BOARD_ID
                                WHERE GUIDE_ID = 1
                            )
    </select>

</mapper>