<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.semie.cook.mapper.GuideMapper">
    <sql id="page1">
        WITH QDATA AS (
    </sql>
    <sql id="page2">
        )
        SELECT xx.*
        FROM (
                 SELECT /*+ALL_ROWS*/ ROW_NUMBER() OVER(ORDER BY yy.GUIDE_ID ASC) rn
                    , yy.*
                 FROM QDATA yy
             ) xx
        WHERE rn BETWEEN #{start} AND #{end}
    </sql>


    <select id="selectAll" parameterType="com.semie.cook.common.Pagination" resultType="GuideDTO">
        <include refid="page1" />
        SELECT DISTINCT
        g.guide_id,
        g.board_id,
        g.guide_name,
        g.guide_desc,
        g.create_date,
        (SELECT file_path
        FROM img_list il
        WHERE il.post_id = g.guide_id
        AND il.board_id = g.board_id
        AND il.img_priority = 1) AS poster,
        LISTAGG(
        CASE
        WHEN il.img_priority != 1
        THEN il.file_path
        END, ',') WITHIN GROUP (ORDER BY il.img_priority)
        OVER (PARTITION BY g.guide_id) AS files
        FROM guide g
        LEFT OUTER JOIN img_list il
        ON g.guide_id = il.post_id
        AND il.board_id = g.board_id
        <include refid="page2" />
    </select>

    <select id="totalGuide" resultType="int">
        select count(*) from guide
    </select>

    <select id="selectById" resultType="guideDTO">
        WITH HASHTABLES AS (
            SELECT
                hc.CONN_ID,
                hc.BOARD_ID,
                h.HASH_ID,
                h.HASH_NAME
            FROM
                HASHTAGS_CONN hc
                    INNER JOIN
                HASHTAGS h
                ON hc.HASH_ID = h.HASH_ID
        )
        SELECT DISTINCT
            g.*
                      ,  il.FILE_PATH
                      , LISTAGG(DISTINCT h.HASH_NAME, ',') WITHIN GROUP (ORDER BY g.guide_id) OVER (PARTITION BY g.guide_id) AS hashnames
        FROM
            guide g
            INNER JOIN
            img_list il
        ON g.guide_id = il.post_id
            AND g.BOARD_ID = il.BOARD_ID
            AND il.img_priority = 1
            INNER JOIN
            HASHTABLES h
            ON g.guide_id = h.CONN_ID
            AND il.BOARD_ID = h.BOARD_ID
        WHERE
            g.guide_id = #{guide_id}
    </select>

    <!-- LAB 리스트(hashtag 별) -->
    <select id="selectGuide" resultType="hashMap">
        WITH HASHTABLES AS (
            SELECT hc.CONN_ID
                 , hc.BOARD_ID
                 , h.HASH_ID
                 , h.HASH_NAME
            FROM HASHTAGS_CONN hc
                     INNER JOIN HASHTAGS h
                                ON hc.HASH_ID = h.HASH_ID
        )
        SELECT DISTINCT
            l.LAB_ID
                      , l.BOARD_ID
                      , l.LAB_NAME
                      , l.LAB_NAME_DESC
                      , l.DESC_DETAIL
                      , LISTAGG(DISTINCT h.HASH_NAME, ',') WITHIN GROUP (ORDER BY l.LAB_ID) OVER (PARTITION BY l.LAB_ID) AS hashnames
                    , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY = 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY l.LAB_ID) AS poster
                , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY != 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY l.LAB_ID) AS files
                , ldi.PREPARATION
                , ldi.COOKINGTIME
        FROM LAB l
            LEFT OUTER JOIN HASHTABLES h
        ON l.LAB_ID = h.CONN_ID
            AND l.BOARD_ID = h.BOARD_ID
            LEFT OUTER JOIN IMG_LIST i
            ON l.LAB_ID = i.POST_ID
            AND l.BOARD_ID = i.BOARD_ID
            LEFT OUTER JOIN LAB_DETAIL_INGREDIENT ldi
            ON l.LAB_ID = ldi.LAB_ID
        WHERE h.HASH_NAME IN (
            SELECT h.HASH_NAME
            FROM GUIDE g
            LEFT OUTER JOIN HASHTABLES h
            ON g.GUIDE_ID = h.CONN_ID
            AND g.BOARD_ID = h.board_id
            WHERE GUIDE_ID = #{guide_id}
            )
    </select>

    <!-- SOLUTION 리스트(hashtag 별) -->
    <select id="selectGuide1" resultType="hashMap">
        WITH HASHTABLES AS (
            SELECT hc.CONN_ID
                 , hc.BOARD_ID
                 , h.HASH_ID
                 , h.HASH_NAME
            FROM HASHTAGS_CONN hc
                     INNER JOIN HASHTAGS h
                                ON hc.HASH_ID = h.HASH_ID
        )
        SELECT DISTINCT
            s.SOLUTION_ID
                      , s.BOARD_ID
                      , s.SOLUTION_NAME
                      , s.SOLUTION_DESC
                      , s.SOLUTION_DETAIL
                      , DBMS_LOB.SUBSTR(s.DESC_DETAIL, 4000) AS DESC_DETAIL
                      , LISTAGG(DISTINCT h.HASH_NAME, ',') WITHIN GROUP (ORDER BY s.SOLUTION_ID) OVER (PARTITION BY s.SOLUTION_ID) AS hashnames
            		  , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY = 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY s.SOLUTION_ID) AS poster
                , LISTAGG(DISTINCT CASE WHEN IMG_PRIORITY != 1 THEN i.FILE_PATH END, ',') WITHIN GROUP (ORDER BY i.IMG_PRIORITY) OVER (PARTITION BY s.SOLUTION_ID) AS files
        FROM SOLUTION s
            LEFT OUTER JOIN HASHTABLES h
        ON s.SOLUTION_ID = h.CONN_ID
            AND s.BOARD_ID = h.BOARD_ID
            LEFT OUTER JOIN IMG_LIST i
            ON s.SOLUTION_ID = i.POST_ID
            AND s.BOARD_ID = i.BOARD_ID
        WHERE h.HASH_NAME IN (
            SELECT h.HASH_NAME
            FROM GUIDE g
            LEFT OUTER JOIN HASHTABLES h
            ON g.GUIDE_ID = h.CONN_ID
            AND g.BOARD_ID = h.board_id
            WHERE GUIDE_ID = #{guide_id}
            )
    </select>

</mapper>